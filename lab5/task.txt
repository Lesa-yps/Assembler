лабораторная №5 по ассемблеру
Использование команд процессора 80386 в MASM
Команды побитовых операций в архитектуре x86 появились, начиная с 386-го
процессора. Для того, чтобы указать компилятору на необходимость их поддержки,
нужно в начале модуля указать директиву .386. Однако при использовании этой
директивы компилятор начнёт формировать файлы для 32-разрядных архитектур,
поэтому в описании сегментов потребуется указывать параметр USE16.
Задание
Требуется составить программу, которая будет осуществлять:
● ввод 16-разрядного беззнакового числа в 10 системе счисления;
● вывод его в беззнаковом представлении в 2 системе счисления;
● усечённое до 8 разрядов значение (аналогично приведению типа int к char в
языке C) в знаковом представлении в 16 системе счисления;
● задание на применение команд побитовой обработки: степень
двойки, которой кратно введённое число
Взаимодействие с пользователем должно строиться на основе меню. Программа
должна содержать не менее пяти модулей. Главный модуль должен обеспечивать
вывод меню, а также содержать массив указателей на подпрограммы, выполняющие
действия, соответствующие пунктам меню. Обработчики действий должны быть
оформлены в виде подпрограмм, находящихся каждая в отдельном модуле. Вызов
необходимой функции требуется осуществлять с помощью адресации по массиву
индексом выбранного пункта меню.

Особенности моей программы:
1. Все сегменты данных написаны так, чтобы они объединялись в один, чтобы не загружать в каждом 
модуле сегменты данных в DS (именно в DS, так как 09h работает с парой регистров ds:dx)
2. shl bx, 4 ; побитовый сдвиг влево числа на 4 разряда
(в отладчике сдвигает на 1, так как EBX 32 бита, а в отлидчике в 4 раза меньше нулей)
3. bin 1111 1111 1111 1111 -> dec 65535

mov ax, si              ; AX = 10
mul bx                  ; умножаем 10 на уже введенное число
;команда mul (Если число - это слово, то (DX AX) = AX * ЧИСЛО)

Итак, синтаксис команды DIV такой:
DIV ЧИСЛО
ЧИСЛОМ может быть один из следующих:
-Область памяти (MEM)
-Регистр общего назначения (REG)
Эта команда не работает с сегментными регистрами, а также не работает непосредственно с числами.
А теперь алгоритм работы команды DIV:
Если ЧИСЛО - это БАЙТ, то AL = AX / ЧИСЛО
Если ЧИСЛО - это СЛОВО, то AX = (DX AX) / ЧИСЛО
Остаток от деления
Как вы понимаете, инструкция DIV выполняет целочисленное деление.
При этом остаток от деления, если таковой имеется, будет записан:
В регистр АН, если ЧИСЛО - это байт
В регистр DX, если ЧИСЛО - это слово
Никакие флаги при этом не изменяются. А если и меняются, то об этом ничего не сказано в документации,
следовательно, проверять флаги нет необходимости.