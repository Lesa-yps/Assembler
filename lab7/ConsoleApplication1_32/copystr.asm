.686
.MODEL FLAT, C
.STACK


.CODE
; вторая копирует строку с адреса, заданного одним указателем, по адресу,
; заданному другим указателем, и реализована в отдельном asm - файле.Функция
; должна принимать 3 параметра: два указателя и длину строки.Про
; расположение указателей в памяти и расстояние между ними заранее ничего не
; известно(первая строка может начинаться раньше второй или наоборот строки могут перекрываться).
str_copy PROC
	; Параметры в регистры
    mov eax, dword ptr [esp + 4]            ; Указатель на str2 (пропустили 4 байта - адрес возврата)
    mov edx, dword ptr [esp + 8]            ; Указатель на str1 (пропустили адрес возврата и str2)
    mov ecx, dword ptr [esp + 12]           ; len (пропустили адрес возврата, str1 и str2)

    mov esi, edx                            ; Указатель на начало str1 (откуда копируем)
    mov edi, eax                            ; Указатель на начало str2 (куда копируем)
    inc ecx                                 ; увеличиваем количество копируемых байт на 1, чтоб ещё символ конца строки захватило
    rep movsb                               ; Копирование строки str1 во временный буфер

    mov ecx, dword ptr [esp + 12]           ; восстановили len (количество байт для копирования)
    inc ecx                                 ; увеличиваем количество копируемых байт на 1, чтоб ещё символ конца строки захватило
    cld

    mov eax, edi
    sub eax, esi
    cmp eax, ecx
    jge skip_change

    add edi, ecx
    add esi, ecx
    inc ecx
    std
    
    skip_change:
        rep movsb                               ; Копирование временного буфера в строку str2
    
    cld

	ret
str_copy ENDP
END